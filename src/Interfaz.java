
import java.util.ArrayList;
import java.util.Objects;
import javax.swing.JOptionPane;

/**
 * This class and interface contains the methods and the graphical interface
 *
 * @authors Harold, Daniel, Armando
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Class fields
     */
    public ArrayList<Familia> TodasFamilias = new ArrayList();
    int IDEgreso = 0;
    int IDIngreso = 0;

    public Interfaz() {
        initComponents();
        inicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField12 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        MainPanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        PanelUbicacion = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        ComboXGenero = new javax.swing.JComboBox<>();
        ComboXGrado = new javax.swing.JComboBox<>();
        IngresosYEgresos = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jComboBox7 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        ComboXClasiEgre = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton7 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jComboBox8 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        jButton13 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextField31 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jTextField26 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTextField28 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jTextField29 = new javax.swing.JTextField();
        jComboBox9 = new javax.swing.JComboBox<>();
        jComboBox10 = new javax.swing.JComboBox<>();
        jButton14 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jTextField32 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jTextField30 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();

        jLabel12.setText("Direccion exacta");

        jButton4.setText("Insertar Ubicacion");

        jLabel13.setText("Provincia");

        jLabel14.setText("Canton");

        jLabel15.setText("Distrito");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Digital Finance System");

        MainPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MainPanelStateChanged(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel2.setText("Nombre");

        jLabel3.setText("Apellido");

        jLabel4.setText("Edad");

        jLabel5.setText("Trabajo");

        jLabel6.setText("Genero");

        jLabel7.setText("Grado Escolaridad");

        jButton1.setText("Insertar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Provincia");

        jLabel9.setText("Canton");

        jLabel10.setText("Distrito");

        jLabel11.setText("Direccion exacta");

        jButton3.setText("Insertar Ubicacion");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setText("Usted es la primer persona de esta familia,\nPor favor ingrese la ubicacion de su familia.");
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout PanelUbicacionLayout = new javax.swing.GroupLayout(PanelUbicacion);
        PanelUbicacion.setLayout(PanelUbicacionLayout);
        PanelUbicacionLayout.setHorizontalGroup(
            PanelUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelUbicacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelUbicacionLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelUbicacionLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelUbicacionLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelUbicacionLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        PanelUbicacionLayout.setVerticalGroup(
            PanelUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelUbicacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(PanelUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelUbicacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(144, Short.MAX_VALUE))
        );

        ComboXGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));
        ComboXGenero.setToolTipText("");

        ComboXGrado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguna", "Primaria", "Secundaria", "Universidad" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(ComboXGrado, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboXGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PanelUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(ComboXGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(ComboXGrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addComponent(PanelUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        MainPanel.addTab("Personas", jPanel1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Agregar un Ingreso", "Agregar un Egreso" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1Action(evt);
            }
        });

        jLabel16.setText("ID de la Persona");

        jLabel19.setText("Comentario");

        jButton5.setText("Agregar Ingreso");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(0, 50, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel17.setText("Monto");

        jLabel18.setText("Descripcion");

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semana 1", "Semana 2", "Semana 3", "Semana 4" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        ComboXClasiEgre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fisiologia", "Seguridad", "Afiliacion", "Reconocimiento", "Autorrealizacion" }));

        jLabel20.setText("Clasificacion");

        jButton6.setText("Agregar Egreso");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel20)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(ComboXClasiEgre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(35, 35, 35))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboXClasiEgre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout IngresosYEgresosLayout = new javax.swing.GroupLayout(IngresosYEgresos);
        IngresosYEgresos.setLayout(IngresosYEgresosLayout);
        IngresosYEgresosLayout.setHorizontalGroup(
            IngresosYEgresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IngresosYEgresosLayout.createSequentialGroup()
                .addGroup(IngresosYEgresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(IngresosYEgresosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(IngresosYEgresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(IngresosYEgresosLayout.createSequentialGroup()
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(IngresosYEgresosLayout.createSequentialGroup()
                        .addGap(490, 490, 490)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );
        IngresosYEgresosLayout.setVerticalGroup(
            IngresosYEgresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IngresosYEgresosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IngresosYEgresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(IngresosYEgresosLayout.createSequentialGroup()
                        .addGroup(IngresosYEgresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(IngresosYEgresosLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(IngresosYEgresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainPanel.addTab("Ingresos y Egresos", IngresosYEgresos);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consulta 1", "Consulta 2", "Consulta 3", "Consulta 4", "Consulta 5", "Consulta 6", "Consulta 7", "Consulta 8" }));

        jButton7.setText("Realizar Consulta");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel21.setText("Seleccione la consulta que desee realizar:");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Consulta 1: Muestra el porcentaje de las clasificaciones sociales.\n\nConsulta 2: Muestra la clase social con más capacidad de ahorro.\n\nConsulta 3: Muestra el porcentaje de falimias que gastan solo en actividades de fisiologia y seguridad.\n\nConsulta 4: Muestra la cantidad de familias que gastan igual o más de un 10% de sus ingresos en actividades de autorrealización.\n\nConsulta 5: Muestra el grado de escolaridad que más ahorra.\n\nConsulta 6: Muestra todas las familias ordenadas de mayor a menor ingreso, anualmente.\n\nConsulta 7: Muestra todas las familias ordenadas de mayor a menor ahorro, anualmente.\n\nConsulta 8: Muetra todas las familias que tienen cero(0) ahorros anuales.\n");
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)))
                .addContainerGap(326, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consultas Generales", jPanel2);

        jButton8.setText("Realizar Consulta");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel22.setText("Ingrese el ID de la Persona:");

        jTextField20.setEditable(false);
        jTextField20.setText("Consulta 9: Muestra en qué semana una X persona registra más gastos.");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(709, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addGap(43, 43, 43)
                .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(254, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consulta 9", jPanel13);

        jButton9.setText("Realizar Consulta");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel23.setText("Ingrese el Apellido de la Familia:");

        jTextField21.setEditable(false);
        jTextField21.setText("Consulta 10: Muestra en qué semana una X familia registra más ingresos.");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(704, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addGap(44, 44, 44)
                .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(253, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consulta 10", jPanel14);

        MainPanel.addTab("Calculos y Reportes", jTabbedPane1);

        jTabbedPane2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane2StateChanged(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Modificar un Ingreso", "Modificar un Egreso", "Modificar la ubicacion de una Familia" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel24.setText("ID de la persona");

        jTextField22.setToolTipText("");

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semana 1", "Semana 2", "Semana 3", "Semana 4" }));

        jButton13.setText("Mostrar");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel33.setText("ID");

        jLabel27.setText("Nuevo Monto");

        jButton2.setText("Modificar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jLabel27)
                    .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(97, 97, 97))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jTextField22, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton13)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13))
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel25.setText("Nuevo Distrito");

        jLabel26.setText("Nueva Direccion exacta");

        jButton10.setText("Modificar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel28.setText("Nueva Provincia");

        jLabel29.setText("Nuevo Canton");

        jLabel30.setText("Apellido de la Familia");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton10)
                            .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField26, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jTextField28))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(186, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Modificar", jPanel6);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Eliminar un Ingreso", "Eliminar un Egreso", "Eliminar una Familia" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        jLabel31.setText("ID de la persona");

        jTextField29.setToolTipText("");

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semana 1", "Semana 2", "Semana 3", "Semana 4" }));

        jButton14.setText("Mostrar");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton11.setText("Eliminar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel34.setText("ID");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addGap(18, 18, 18)
                .addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jTextField29, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14))
                .addGap(18, 18, 18)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel32.setText("Apellido de la Familia");

        jButton12.setText("Eliminar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12)
                    .addComponent(jLabel32))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(667, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(161, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Eliminar", jPanel7);

        MainPanel.addTab("Modificar y Eliminar", jTabbedPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1081, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainPanel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        agregarEgreso(Integer.parseInt(jTextField6.getText()), Double.parseDouble(jTextField7.getText()), jTextField16.getText(),
                String.valueOf(ComboXClasiEgre.getModel().getSelectedItem()),
                String.valueOf(jComboBox7.getModel().getSelectedItem()),
                String.valueOf(jComboBox2.getModel().getSelectedItem()));
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField16.setText("");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        agregarIngreso(Integer.parseInt(jTextField6.getText()), Double.parseDouble(jTextField7.getText()),
                jTextField16.getText(), jTextField17.getText(),
                String.valueOf(jComboBox7.getModel().getSelectedItem()),
                String.valueOf(jComboBox2.getModel().getSelectedItem()));
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField16.setText("");
        jTextField17.setText("");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox1Action(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1Action
        if ("Agregar un Ingreso".equals(String.valueOf(jComboBox1.getModel().getSelectedItem()))) {
            jPanel5.setVisible(true);
            jPanel4.setVisible(false);
            jPanel3.setVisible(true);
        } else {
            jPanel5.setVisible(true);
            jPanel4.setVisible(true);
            jPanel3.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox1Action

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        insertarUbicacion(jTextField8.getText(), jTextField9.getText(), jTextField10.getText(), jTextField11.getText());
        jTextField8.setText("");
        jTextField9.setText("");
        jTextField10.setText("");
        jTextField11.setText("");
        PanelUbicacion.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        insertarPersona(Integer.parseInt(jTextField1.getText()), jTextField2.getText(),
                jTextField3.getText(), Integer.parseInt(jTextField4.getText()),
                jTextField5.getText(), String.valueOf(ComboXGenero.getModel().getSelectedItem()),
                String.valueOf(ComboXGrado.getModel().getSelectedItem()));
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void MainPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MainPanelStateChanged
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jPanel8.setVisible(false);
        jPanel9.setVisible(false);
        jPanel10.setVisible(false);
        jPanel11.setVisible(false);
    }//GEN-LAST:event_MainPanelStateChanged

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if ("Consulta 1".equals(String.valueOf(jComboBox3.getModel().getSelectedItem()))) {
            consulta1();
        }
        if ("Consulta 2".equals(String.valueOf(jComboBox3.getModel().getSelectedItem()))) {
            consulta2();
        }
        if ("Consulta 3".equals(String.valueOf(jComboBox3.getModel().getSelectedItem()))) {
            consulta3();
        }
        if ("Consulta 4".equals(String.valueOf(jComboBox3.getModel().getSelectedItem()))) {
            consulta4();
        }
        if ("Consulta 5".equals(String.valueOf(jComboBox3.getModel().getSelectedItem()))) {
            consulta5();
        }
        if ("Consulta 6".equals(String.valueOf(jComboBox3.getModel().getSelectedItem()))) {
            consulta6();
        }
        if ("Consulta 7".equals(String.valueOf(jComboBox3.getModel().getSelectedItem()))) {
            consulta7();
        }
        if ("Consulta 8".equals(String.valueOf(jComboBox3.getModel().getSelectedItem()))) {
            consulta8();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        consulta9(Integer.parseInt(jTextField18.getText()));
        jTextField18.setText("");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        consulta10(jTextField19.getText());
        jTextField19.setText("");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        modificarUbicacion(jTextField28.getText(), jTextField26.getText(), jTextField27.getText(), jTextField24.getText(), jTextField25.getText());
        jTextField28.setText("");
        jTextField26.setText("");
        jTextField27.setText("");
        jTextField24.setText("");
        jTextField25.setText("");
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        if ("Modificar un Ingreso" == (String.valueOf(jComboBox4.getModel().getSelectedItem()))
                || "Modificar un Egreso" == (String.valueOf(jComboBox4.getModel().getSelectedItem()))) {
            jPanel8.setVisible(true);
            jPanel9.setVisible(false);
            jPanel12.setVisible(false);
            jTextField22.setEnabled(true);
        } else {
            jPanel8.setVisible(false);
            jPanel9.setVisible(true);
            jPanel12.setVisible(false);

        }
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        if ("Eliminar un Ingreso" == (String.valueOf(jComboBox5.getModel().getSelectedItem()))
                || "Eliminar un Egreso" == (String.valueOf(jComboBox5.getModel().getSelectedItem()))) {
            jPanel10.setVisible(true);
            jPanel11.setVisible(false);
            jPanel15.setVisible(false);
            jTextField29.setEnabled(true);
        } else {
            jPanel10.setVisible(false);
            jPanel11.setVisible(true);
            jPanel15.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if ("Eliminar un Ingreso" == (String.valueOf(jComboBox5.getModel().getSelectedItem()))) {
            eliminarIngreso(Integer.parseInt(jTextField29.getText()), Integer.parseInt(jTextField32.getText()));
        }
        if ("Eliminar un Egreso" == (String.valueOf(jComboBox5.getModel().getSelectedItem()))) {
            eliminarEgreso(Integer.parseInt(jTextField29.getText()), Integer.parseInt(jTextField32.getText()));
        }
        jTextField29.setText("");
        jTextField32.setText("");
        jTextField29.setEnabled(true);
        jPanel15.setVisible(false);

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        eliminarFamilia(jTextField30.getText());
        jTextField30.setText("");
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if ("Modificar un Ingreso" == (String.valueOf(jComboBox4.getModel().getSelectedItem()))) {
            mostrarIngresos(Integer.parseInt(jTextField22.getText()), String.valueOf(jComboBox8.getModel().getSelectedItem()),
                    String.valueOf(jComboBox6.getModel().getSelectedItem()));
        }
        if ("Modificar un Egreso" == (String.valueOf(jComboBox4.getModel().getSelectedItem()))) {
            mostrarEgresos(Integer.parseInt(jTextField22.getText()), String.valueOf(jComboBox8.getModel().getSelectedItem()),
                    String.valueOf(jComboBox6.getModel().getSelectedItem()));
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if ("Modificar un Ingreso" == (String.valueOf(jComboBox4.getModel().getSelectedItem()))) {
            modificarIngreso(Integer.parseInt(jTextField22.getText()), Integer.parseInt(jTextField31.getText()), Double.parseDouble(jTextField23.getText()));
        }
        if ("Modificar un Egreso" == (String.valueOf(jComboBox4.getModel().getSelectedItem()))) {
            modificarEgreso(Integer.parseInt(jTextField22.getText()), Integer.parseInt(jTextField31.getText()), Double.parseDouble(jTextField23.getText()));
        }
        jTextField22.setText("");
        jTextField31.setText("");
        jTextField23.setText("");
        jPanel12.setVisible(false);
        jTextField22.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if ("Eliminar un Ingreso" == (String.valueOf(jComboBox5.getModel().getSelectedItem()))) {
            mostrarIngresos(Integer.parseInt(jTextField29.getText()), String.valueOf(jComboBox9.getModel().getSelectedItem()),
                    String.valueOf(jComboBox10.getModel().getSelectedItem()));
        }
        if ("Eliminar un Egreso" == (String.valueOf(jComboBox5.getModel().getSelectedItem()))) {
            mostrarEgresos(Integer.parseInt(jTextField29.getText()), String.valueOf(jComboBox9.getModel().getSelectedItem()),
                    String.valueOf(jComboBox10.getModel().getSelectedItem()));
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jTabbedPane2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane2StateChanged
        jTextField22.setEnabled(true);
        jTextField29.setEnabled(true);
        jTextField22.setText("");
        jTextField29.setText("");
    }//GEN-LAST:event_jTabbedPane2StateChanged

    /**
     * Method to calculate the social class of a Familia
     *
     * @param persona
     */
    public void calcularClaseSocialF(Persona persona) {
        Familia familia = buscarFamilia(persona.getApellido());
        Double montoTotal = familia.calcularIngresoTotal();
        if (montoTotal / 12 <= 200000.0) {
            familia.setClasificasionSocial("Baja");
        } else if (montoTotal / 12 > 200000.0 & montoTotal / 12 <= 350000.0) {
            familia.setClasificasionSocial("Baja Superior");
        } else if (montoTotal / 12 > 350000.0 & montoTotal / 12 <= 600000.0) {
            familia.setClasificasionSocial("Media");
        } else if (montoTotal / 12 > 600000.0 & montoTotal / 12 <= 900000.0) {
            familia.setClasificasionSocial("Media Alta");
        } else {
            familia.setClasificasionSocial("Alta");
        }
    }

    /**
     * Method to add Ingresos to a Persona
     *
     * @param ID
     * @param Monto
     * @param Descripcion
     * @param Comentario
     * @param Mes
     * @param Semana
     */
    public void agregarIngreso(int ID, Double Monto, String Descripcion, String Comentario, String Mes, String Semana) {
        if (Monto >= 0) {
            Persona aux = buscarPersona(ID);
            if (aux != null) {
                Ingreso nuevo = new Ingreso(Monto, Descripcion, Comentario, Mes, Semana);
                IDIngreso = IDIngreso + 1;
                nuevo.setID(IDIngreso);
                aux.addIngreso(nuevo);
                JOptionPane.showMessageDialog(rootPane, "Ingreso añadido exitosamente");
                calcularClaseSocialF(aux);
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se pudo agregar Ingreso, Persona inexistente");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pudo agregar, el Monto no puede ser negativo");
        }
    }

    /**
     * Method to add Egresos to a Persona
     *
     * @param ID
     * @param Monto
     * @param Descripcion
     * @param Clasificacion
     * @param Mes
     * @param Semana
     */
    public void agregarEgreso(int ID, Double Monto, String Descripcion, String Clasificacion, String Mes, String Semana) {
        if (Monto >= 0) {
            Persona aux = buscarPersona(ID);
            if (aux != null) {
                Egreso nuevo = new Egreso(Monto, Descripcion, Clasificacion, Mes, Semana);
                IDEgreso = IDEgreso + 1;
                nuevo.setID(IDEgreso);
                aux.addEgreso(nuevo);
                JOptionPane.showMessageDialog(rootPane, "Egreso añadido exitosamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se pudo agregar Egreso, Persona inexistente");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pudo agregar, el Monto no puede ser negativo");
        }
    }

    /**
     * Method that seeks specific Ingresos
     *
     * @param ID
     * @param mes
     * @param semana
     * @return An ArrayList with Ingresos or a null
     */
    public ArrayList<Ingreso> buscarIngresos(int ID, String mes, String semana) {
        Persona auxP = buscarPersona(ID);
        if (auxP != null) {
            ArrayList<Ingreso> Lista = new ArrayList();
            int cont = 0;
            while (cont < auxP.Ingresos.size()) {
                if ((auxP.Ingresos.get(cont).getMes() == mes) && ((auxP.Ingresos.get(cont).getSemana() == semana))) {
                    Lista.add(auxP.Ingresos.get(cont));
                }
                cont = cont + 1;
            }
            return Lista;
        } else {
            return null;
        }
    }

    /**
     * Method that seeks specific Egresos
     *
     * @param ID
     * @param mes
     * @param semana
     * @return An ArrayList with Egresos or a null
     */
    public ArrayList<Egreso> buscarEgresos(int ID, String mes, String semana) {
        Persona auxP = buscarPersona(ID);
        if (auxP != null) {
            ArrayList<Egreso> Lista = new ArrayList();
            int cont = 0;
            while (cont < auxP.Egresos.size()) {
                if ((auxP.Egresos.get(cont).getMes() == mes) && ((auxP.Egresos.get(cont).getSemana() == semana))) {
                    Lista.add(auxP.Egresos.get(cont));
                }
                cont = cont + 1;
            }
            return Lista;
        } else {
            return null;
        }
    }

    /**
     * Method to add Personas to a Familia
     *
     * @param ID
     * @param Nombre
     * @param Apellido
     * @param Edad
     * @param Trabajo
     * @param Genero
     * @param GradoEscolaridad
     */
    public void insertarPersona(int ID, String Nombre, String Apellido, int Edad, String Trabajo, String Genero, String GradoEscolaridad) {
        if (ID > 0 && Edad > 0) {
            Persona nuevo = new Persona(ID, Nombre, Apellido, Edad, Trabajo, Genero, GradoEscolaridad);
            int FamiliaU = InsertarFam_Per(nuevo);
            if (FamiliaU == 1) {
                mostrarUbicacion();
            }
            if (FamiliaU == 3) {
                JOptionPane.showMessageDialog(rootPane, "No se pudo insertar, ID Repetido");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pudo insertar, el ID y la Edad deben ser mayores que cero ");
        }
    }

    /**
     * Method to create a Familia or a Persona
     *
     * @param persona
     * @return The number that indicates when to show or hide the insertion of
     * the Ubicacion
     */
    public int InsertarFam_Per(Persona persona) {
        if (TodasFamilias.isEmpty()) {
            Familia nueva = new Familia(persona.getApellido());
            nueva.addPersona(persona);
            TodasFamilias.add(nueva);
            JOptionPane.showMessageDialog(rootPane, "Persona insertada exitosamente");
            return 1;
        }
        if (buscarPersona(persona.getID()) != null) {
            return 3;
        } else {
            Familia aux = buscarFamilia(persona.getApellido());
            if (aux != null) {
                aux.addPersona(persona);
            } else {
                Familia nueva = new Familia(persona.getApellido());
                nueva.addPersona(persona);
                TodasFamilias.add(nueva);
                JOptionPane.showMessageDialog(rootPane, "Persona insertada exitosamente");
                return 1;
            }
        }
        return 2;
    }

    /**
     * Method to shows the PanelUbicacion
     */
    public void mostrarUbicacion() {
        PanelUbicacion.setVisible(true);
    }

    /**
     * Method to insert the Ubicacion to a Familia
     *
     * @param pro
     * @param can
     * @param dis
     * @param dic
     */
    public void insertarUbicacion(String pro, String can, String dis, String dic) {
        Ubicacion nueva = new Ubicacion(pro, can, dis, dic);
        int Ubi = TodasFamilias.size();
        TodasFamilias.get(Ubi - 1).setUbicacion(nueva);
        JOptionPane.showMessageDialog(rootPane, "Ubicacion insertada exitosamente");
    }

    /**
     * Method to search for a specific Persona
     *
     * @param ID
     * @return A Persona or a null
     */
    public Persona buscarPersona(int ID) {
        int cont = 0;
        while (cont < TodasFamilias.size()) {
            int cont2 = 0;
            while (cont2 < TodasFamilias.get(cont).Personas.size()) {
                if (TodasFamilias.get(cont).Personas.get(cont2).getID() == ID) {
                    return TodasFamilias.get(cont).Personas.get(cont2);
                }
                cont2 = cont2 + 1;
            }
            cont = cont + 1;
        }
        return null;
    }

    /**
     * Method to search for a specific Familia
     *
     * @param apellido
     * @return A Familia or a null
     */
    public Familia buscarFamilia(String apellido) {
        int contF = 0;
        while (contF < TodasFamilias.size()) {
            if (TodasFamilias.get(contF).getApellido().equals(apellido)) {
                return TodasFamilias.get(contF);
            }
            contF = contF + 1;
        }
        return null;
    }

    /**
     * Method that shows a Personas's Ingresos
     *
     * @param ID
     * @param mes
     * @param semana
     */
    public void mostrarIngresos(int ID, String mes, String semana) {
        ArrayList<Ingreso> auxI = buscarIngresos(ID, mes, semana);
        Persona auxP = buscarPersona(ID);
        if (auxP != null) {
            if (!auxI.isEmpty()) {
                int cont = 0;
                JOptionPane.showMessageDialog(rootPane, "En consola se muestran los Ingresos");
                System.out.println("\n\n--- Aqui se muestran todos los Igresos de ese Mes y esa Semana, para que pueda elijir el ID que desee. ---");
                System.out.println("         _________________________________________________________________________________ ");
                while (cont < auxI.size()) {
                    System.out.println("        | ID: " + auxI.get(cont).getID() + "  -/- Descripcion: " + auxI.get(cont).getDescripcion() + "  -/- Monto: " + String.format("%.2f", auxI.get(cont).getMonto()));
                    cont = cont + 1;
                }
                System.out.println("         ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
                jPanel12.setVisible(true);
                jPanel15.setVisible(true);
                jTextField22.setEnabled(false);
                jTextField29.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se pueden mostrar los Ingresos, Persona no tiene Ingresos");
                jPanel12.setVisible(false);
                jPanel15.setVisible(false);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pueden mostrar los Ingresos, Persona inexistente");
            jPanel12.setVisible(false);
            jPanel15.setVisible(false);

        }
    }

    /**
     * Method that shows a Personas's Egresos
     *
     * @param ID
     * @param mes
     * @param semana
     */
    public void mostrarEgresos(int ID, String mes, String semana) {
        ArrayList<Egreso> auxE = buscarEgresos(ID, mes, semana);
        Persona auxP = buscarPersona(ID);
        if (auxP != null) {
            if (!auxE.isEmpty()) {
                int cont = 0;
                JOptionPane.showMessageDialog(rootPane, "En consola se muestran los Egresos");
                System.out.println("\n\n--- Aqui se muestran todos los Egresos de ese Mes y esa Semana, para que pueda elijir el ID que desee. ---");
                System.out.println("         _________________________________________________________________________________ ");
                while (cont < auxE.size()) {
                    System.out.println("        | ID: " + auxE.get(cont).getID() + "  -/- Descripcion: " + auxE.get(cont).getDescripcion() + "  -/- Monto: " + String.format("%.2f", auxE.get(cont).getMonto()));
                    cont = cont + 1;
                }
                System.out.println("         ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
                jPanel12.setVisible(true);
                jPanel15.setVisible(true);
                jTextField22.setEnabled(false);
                jTextField29.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se pueden mostrar los Egresos, Persona no tiene Egresos");
                jPanel12.setVisible(false);
                jPanel15.setVisible(false);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pueden mostrar los Egresos, Persona inexistente");
            jPanel12.setVisible(false);
            jPanel15.setVisible(false);
        }
    }

    /**
     * Method to modify a specific Ingreso of a Persona
     *
     * @param idP
     * @param idI
     * @param monto
     */
    public void modificarIngreso(int idP, int idI, Double monto) {
        if (monto >= 0) {
            Persona auxP = buscarPersona(idP);
            Ingreso auxI = auxP.getIngreso(idI);
            if (auxI != null) {
                auxI.setMonto(monto);
                calcularClaseSocialF(auxP);
                JOptionPane.showMessageDialog(rootPane, "Ingreso modificado exitosamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se pudo modificar, Ingreso inexistente");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pudo modificar, el Monto no puede ser negativo");
        }
    }

    /**
     * Method to modify a specific Egreso of a Persona
     *
     * @param idP
     * @param idE
     * @param monto
     */
    public void modificarEgreso(int idP, int idE, Double monto) {
        if (monto >= 0) {
            Persona auxP = buscarPersona(idP);
            Egreso auxE = auxP.getEgreso(idE);
            if (auxE != null) {
                auxE.setMonto(monto);
                JOptionPane.showMessageDialog(rootPane, "Egreso modificado exitosamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se pudo modificar, Egreso inexistente");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pudo modificar, el Monto no puede ser negativo");
        }
    }

    /**
     * Method to modify the Ubicacion of a Familia
     *
     * @param Apellido
     * @param pro
     * @param can
     * @param dis
     * @param dic
     */
    public void modificarUbicacion(String Apellido, String pro, String can, String dis, String dic) {
        Familia auxF = buscarFamilia(Apellido);
        if (auxF != null) {
            Ubicacion auxU = new Ubicacion(pro, can, dis, dic);
            auxF.setUbicacion(auxU);
            JOptionPane.showMessageDialog(rootPane, "Ubicacion modificada exitosamente");
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pudo modificar, Familia inexistente");
        }
    }

    /**
     * Method for delete a Egreso of a Persona
     *
     * @param idP
     * @param idE
     */
    public void eliminarEgreso(int idP, int idE) {
        Persona auxP = buscarPersona(idP);
        Egreso auxE = auxP.getEgreso(idE);
        if (auxE != null) {
            auxP.Egresos.remove(auxE);
            JOptionPane.showMessageDialog(rootPane, "Egreso eliminado exitosamente");
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pudo eliminar, Egreso inexistente");
        }
    }

    /**
     * Method for delete a Ingreso of a Persona
     *
     * @param idP
     * @param idI
     */
    public void eliminarIngreso(int idP, int idI) {
        Persona auxP = buscarPersona(idP);
        Ingreso auxI = auxP.getIngreso(idI);
        if (auxI != null) {
            auxP.Ingresos.remove(auxI);
            calcularClaseSocialF(auxP);
            JOptionPane.showMessageDialog(rootPane, "Ingreso eliminado exitosamente");
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pudo eliminar, Ingreso inexistente");
        }
    }

    /**
     * Method for delete a Familia
     *
     * @param Apellido
     */
    public void eliminarFamilia(String Apellido) {
        Familia auxF = buscarFamilia(Apellido);
        if (auxF != null) {
            TodasFamilias.remove(auxF);
            JOptionPane.showMessageDialog(rootPane, "Familia eliminada exitosamente");
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pudo eliminar, Familia inexistente");
        }
    }

    /**
     * Method that shows the percentage of the ClasificacionSocial of
     * TodasFamilias
     */
    public void consulta1() {
        if (TodasFamilias.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No exixten Familias");
        } else {
            int cont = 0, cont1 = 0, cont2 = 0, cont3 = 0, cont4 = 0, cont5 = 0;
            while (cont < TodasFamilias.size()) {
                if ("Baja".equals(TodasFamilias.get(cont).getClasificasionSocial())) {
                    cont1 = cont1 + 1;
                }
                if ("Baja Superior".equals(TodasFamilias.get(cont).getClasificasionSocial())) {
                    cont2 = cont2 + 1;
                }
                if ("Media".equals(TodasFamilias.get(cont).getClasificasionSocial())) {
                    cont3 = cont3 + 1;
                }
                if ("Media Alta".equals(TodasFamilias.get(cont).getClasificasionSocial())) {
                    cont4 = cont4 + 1;
                }
                if ("Alta".equals(TodasFamilias.get(cont).getClasificasionSocial())) {
                    cont5 = cont5 + 1;
                }
                cont = cont + 1;
            }
            System.out.println("                            CONSULTA 1                           ");
            System.out.println(" __________________________________________________________ ");
            System.out.println("|           Porcentaje de las clasificaciones sociales           ");
            System.out.println("|---------------------------------------------------------- ");
            System.out.println("| Clase Alta: " + ((cont5 * 100) / TodasFamilias.size()) + "%            ");
            System.out.println("|---------------------------------------------------------- ");
            System.out.println("| Clase Media Alta: " + ((cont4 * 100) / TodasFamilias.size()) + "%      ");
            System.out.println("|---------------------------------------------------------- ");
            System.out.println("| Clase Media: " + ((cont3 * 100) / TodasFamilias.size()) + "%           ");
            System.out.println("|---------------------------------------------------------- ");
            System.out.println("| Clase Baja Superior: " + ((cont2 * 100) / TodasFamilias.size()) + "%   ");
            System.out.println("|---------------------------------------------------------- ");
            System.out.println("| Clase Baja: " + ((cont1 * 100) / TodasFamilias.size()) + "%            ");
            System.out.println(" ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
        }
    }

    /**
     * Method that shows which ClasificacionSocial has the greatest ability to
     * save up
     */
    public void consulta2() {
        if (TodasFamilias.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No exixten Familias");
        } else {
            int cont = 0;
            Double IB = 0.0, IBS = 0.0, IM = 0.0, IMA = 0.0, IA = 0.0;
            Double AB = 0.0, ABS = 0.0, AM = 0.0, AMA = 0.0, AA = 0.0;
            while (cont < TodasFamilias.size()) {
                if (TodasFamilias.get(cont).getClasificasionSocial() == "Baja") {
                    IB = IB + TodasFamilias.get(cont).calcularIngresoTotal();
                    AB = AB + TodasFamilias.get(cont).calcularAhorroTotal();
                }
                if (TodasFamilias.get(cont).getClasificasionSocial() == "Baja Superior") {
                    IBS = IBS + TodasFamilias.get(cont).calcularIngresoTotal();
                    ABS = ABS + TodasFamilias.get(cont).calcularAhorroTotal();
                }
                if (TodasFamilias.get(cont).getClasificasionSocial() == "Media") {
                    IM = IM + TodasFamilias.get(cont).calcularIngresoTotal();
                    AM = AM + TodasFamilias.get(cont).calcularAhorroTotal();
                }
                if (TodasFamilias.get(cont).getClasificasionSocial() == "Media Alta") {
                    IMA = IMA + TodasFamilias.get(cont).calcularIngresoTotal();
                    AMA = AMA + TodasFamilias.get(cont).calcularAhorroTotal();
                }
                if (TodasFamilias.get(cont).getClasificasionSocial() == "Alta") {
                    IA = IA + TodasFamilias.get(cont).calcularIngresoTotal();
                    AA = AA + TodasFamilias.get(cont).calcularAhorroTotal();
                }
                cont = cont + 1;
            }
            Double PB = ((AB * 100) / IB);
            Double PBS = ((ABS * 100) / IBS);
            Double PM = ((AM * 100) / IM);
            Double PMA = ((AMA * 100) / IMA);
            Double PA = ((AA * 100) / IA);
            Double[] Porcentajes = new Double[]{PB, PBS, PM, PMA, PA};
            Double mayor = Porcentajes[0];
            for (int x = 1; x < Porcentajes.length; x++) {
                if ("NaN" == String.valueOf(mayor) || Porcentajes[x] > mayor) {
                    mayor = Porcentajes[x];
                }
            }
            System.out.println("\n\n\n                                  CONSULTA 2                                 ");
            System.out.println(" ____________________________________________________________________________________________ ");
            if (mayor == PB) {
                System.out.println("| La clase Baja tiene capacidad de ahorrar un " + String.format("%.2f", PB) + "% de sus ingresos.");
            }
            if (mayor == PBS) {
                System.out.println("| La clase Baja Superior tiene capacidad de ahorrar un " + String.format("%.2f", PBS) + "% de sus ingresos.");
            }
            if (mayor == PM) {
                System.out.println("| La clase Media tiene capacidad de ahorrar un " + String.format("%.2f", PM) + "% de sus ingresos.");
            }
            if (mayor == PMA) {
                System.out.println("| La clase Media Alta tiene capacidad de ahorrar un " + String.format("%.2f", PMA) + "% de sus ingresos.");
            }
            if (mayor == PA) {
                System.out.println("| La clase Alta tiene capacidad de ahorrar un " + String.format("%.2f", PA) + "% de sus ingresos.");
            }
            System.out.println(" ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
        }
    }

    /**
     * Method that shows TodasFamilias spend on Fisiologia and Seguridad
     */
    public void consulta3() {
        if (TodasFamilias.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No exixten Familias");
        } else {
            int cont = 0, contF = 0;
            while (cont < TodasFamilias.size()) {
                int contP = 0;
                boolean control = false;
                while (contP < TodasFamilias.get(cont).Personas.size()) {
                    int contE = 0;
                    while (contE < TodasFamilias.get(cont).Personas.get(contP).Egresos.size()) {
                        if (!"Fisiologia".equals(TodasFamilias.get(cont).Personas.get(contP).Egresos.get(contE).getClasificacion())) {
                            if (!"Seguridad".equals(TodasFamilias.get(cont).Personas.get(contP).Egresos.get(contE).getClasificacion())) {
                                control = true;
                            }
                        }
                        contE = contE + 1;
                    }
                    contP = contP + 1;
                }
                if (control == false) {
                    contF = contF + 1;
                }
                cont = cont + 1;
            }
            System.out.println("\n\n\n                                  CONSULTA 3                                 ");
            System.out.println(" ______________________________________________________________________________________________ ");
            System.out.println("| El " + ((contF * 100) / TodasFamilias.size()) + "% de las familias registradas gastan solo en los dos niveles basicos de la piramide.");
            System.out.println(" ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
        }
    }

    /**
     * Method that shows TodasFamilias that spend more than 10% of their
     * Ingresos on Autorrealizacion
     */
    public void consulta4() {
        if (TodasFamilias.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No exixten Familias");
        } else {
            int cont = 0, contF = 0;
            Double IT = 0.0;
            while (cont < TodasFamilias.size()) {
                int contP = 0;
                Double SA = 0.0;
                while (contP < TodasFamilias.get(cont).Personas.size()) {
                    int contE = 0;
                    while (contE < TodasFamilias.get(cont).Personas.get(contP).Egresos.size()) {
                        if ("Autorrealizacion".equals(TodasFamilias.get(cont).Personas.get(contP).Egresos.get(contE).getClasificacion())) {
                            IT = TodasFamilias.get(cont).calcularIngresoTotal();
                            SA = SA + TodasFamilias.get(cont).Personas.get(contP).Egresos.get(contE).getMonto();
                        }
                        contE = contE + 1;
                    }
                    contP = contP + 1;
                }
                Double PA = ((SA * 100) / IT);
                if (PA >= 10.0) {
                    contF = contF + 1;
                }
                cont = cont + 1;
            }
            System.out.println("\n\n\n                                  CONSULTA 4                                 ");
            System.out.println(" _______________________________________________________________________________________________________________ ");
            System.out.println("| La cantidad de familias que gastan mas del 10% de sus ingresos en actividades de Autorrealizacion es: " + contF + ".");
            System.out.println(" ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
        }
    }

    /**
     * Method that shows which GradoEscolaridad save up more.
     */
    public void consulta5() {
        if (TodasFamilias.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No exixten Familias");
        } else {
            int cont = 0;
            Double AN = 0.0;
            Double AP = 0.0;
            Double AS = 0.0;
            Double AU = 0.0;
            while (cont < TodasFamilias.size()) {
                int cont2 = 0;
                while (cont2 < TodasFamilias.get(cont).Personas.size()) {
                    if ("Ninguna".equals(TodasFamilias.get(cont).Personas.get(cont2).getGradoEscolaridad())) {
                        AN = AN + TodasFamilias.get(cont).Personas.get(cont2).calcularAhorroTotal();
                    }
                    if ("Primaria".equals(TodasFamilias.get(cont).Personas.get(cont2).getGradoEscolaridad())) {
                        AP = AP + TodasFamilias.get(cont).Personas.get(cont2).calcularAhorroTotal();
                    }
                    if ("Secundaria".equals(TodasFamilias.get(cont).Personas.get(cont2).getGradoEscolaridad())) {
                        AS = AS + TodasFamilias.get(cont).Personas.get(cont2).calcularAhorroTotal();
                    }
                    if ("Universidad".equals(TodasFamilias.get(cont).Personas.get(cont2).getGradoEscolaridad())) {
                        AU = AU + TodasFamilias.get(cont).Personas.get(cont2).calcularAhorroTotal();
                    }
                    cont2 = cont2 + 1;
                }
                cont = cont + 1;
            }
            Double[] AhorrosT = new Double[]{AN, AP, AS, AU};
            Double mayor = AhorrosT[0];
            for (int x = 1; x < AhorrosT.length; x++) {
                if (AhorrosT[x] > mayor) {
                    mayor = AhorrosT[x];
                }
            }
            System.out.println("\n\n\n                          CONSULTA 5                            ");
            System.out.println(" _______________________________________________________________ ");
            if (Objects.equals(mayor, AN)) {
                System.out.println("| El grado de escolaridad que mas ahorra es: Ninguna");
            }
            if (Objects.equals(mayor, AP)) {
                System.out.println("| El grado de escolaridad que mas ahorra es: Primaria");
            }
            if (Objects.equals(mayor, AS)) {
                System.out.println("| El grado de escolaridad que mas ahorra es: Secundaria");
            }
            if (Objects.equals(mayor, AU)) {
                System.out.println("| El grado de escolaridad que mas ahorra es: Universidad");
            }
            System.out.println(" ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
        }
    }

    /**
     * Method to list registered TodasFamilias in order of highest Ingresos to
     * least Ingresos
     */
    public void consulta6() {
        if (TodasFamilias.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No exixten Familias");
        } else {
            int cont = 0;
            ArrayList<Double> ListaIngresos = new ArrayList();
            ArrayList<String> ListaApellidos = new ArrayList();
            while (cont < TodasFamilias.size()) {
                ListaIngresos.add(TodasFamilias.get(cont).calcularIngresoTotal());
                ListaApellidos.add(TodasFamilias.get(cont).getApellido());
                cont = cont + 1;
            }
            System.out.println("\n\n\n                          CONSULTA 6                            ");
            System.out.println(" _____________________________________________________________________________________________ ");
            while ((ListaIngresos.size()) != 0) {
                int cont3 = 0;
                Double max = 0.0;
                while (cont3 < (ListaIngresos.size())) {
                    if (ListaIngresos.get(cont3) > max) {
                        max = ListaIngresos.get(cont3);
                    }
                    cont3 = cont3 + 1;
                }
                int indexMax = ListaIngresos.indexOf(max);
                Familia familia = buscarFamilia(ListaApellidos.get(indexMax));
                System.out.println("|" + familia.getApellido() + " de " + familia.getUbicacion().getProvincia()
                        + ", " + familia.getUbicacion().getCanton() + ", " + familia.getUbicacion().getDistrito()
                        + ", Total de Ingresos: " + String.format("%.2f", familia.calcularIngresoTotal()));
                ListaIngresos.remove(indexMax);
                ListaApellidos.remove(indexMax);
            }
            System.out.println(" ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
        }
    }

    /**
     * Method to list in order the registered TodasFamilias that have more save
     * up to less annual save up, different from zero.
     */
    public void consulta7() {
        if (TodasFamilias.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No exixten Familias");
        } else {
            int cont = 0;
            boolean bandera = false;
            ArrayList<Double> ListaAhorros = new ArrayList();
            ArrayList<String> ListaApellidos = new ArrayList();
            while (cont < TodasFamilias.size()) {
                ListaAhorros.add(TodasFamilias.get(cont).calcularAhorroTotal());
                ListaApellidos.add(TodasFamilias.get(cont).getApellido());
                cont = cont + 1;
            }
            System.out.println("\n\n\n                          CONSULTA 7                            ");
            System.out.println(" _____________________________________________________________________________________________ ");
            while ((ListaAhorros.size()) != 0) {
                int cont3 = 0;
                Double max = 0.0;
                while (cont3 < (ListaAhorros.size())) {
                    if (ListaAhorros.get(cont3) > max) {
                        max = ListaAhorros.get(cont3);
                    }
                    cont3 = cont3 + 1;
                }
                int indexMax = ListaAhorros.indexOf(max);
                Familia familia = buscarFamilia(ListaApellidos.get(indexMax));
                if (familia.calcularAhorroTotal() > 0) {
                    System.out.println("|" + familia.getApellido() + " de " + familia.getUbicacion().getProvincia()
                            + ", " + familia.getUbicacion().getCanton() + ", " + familia.getUbicacion().getDistrito()
                            + ", Total de Ahorros: " + String.format("%.2f", familia.calcularAhorroTotal()));
                    bandera = true;
                }
                ListaAhorros.remove(indexMax);
                ListaApellidos.remove(indexMax);
            }
            if (bandera == false) {
                System.out.println("| No hay Familias con mas de cero ahorros anuales. ");
            }
            System.out.println(" ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
        }
    }

    /**
     * Method for listing registered TodasFamilias with zero annual save up
     */
    public void consulta8() {
        if (TodasFamilias.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No exixten Familias");
        } else {
            int cont = 0;
            int cont2 = 0;
            System.out.println("\n\n\n                          CONSULTA 8                            ");
            System.out.println(" _____________________________________________________________________________________________ ");
            while (cont < TodasFamilias.size()) {
                if (TodasFamilias.get(cont).calcularAhorroTotal() == 0) {
                    System.out.println("|" + TodasFamilias.get(cont).getApellido() + " de " + TodasFamilias.get(cont).getUbicacion().getProvincia()
                            + ", " + TodasFamilias.get(cont).getUbicacion().getCanton() + ", " + TodasFamilias.get(cont).getUbicacion().getDistrito()
                            + ", Tiene cero ahorros anuales.");
                    System.out.println("|--------------------------------------------------------------------------------------------- ");
                    cont2 = cont2 + 1;
                }
                cont = cont + 1;
            }
            if (cont2 >= 1) {
                System.out.println("| No hay más familias que tengan cero ahorros.         ");
            } else {
                System.out.println("| No hay familias que tengan cero ahorros.");
            }
            System.out.println(" ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
        }
    }

    /**
     * Method to show in which week, Personas X registers more Egresos
     *
     * @param ID
     */
    public void consulta9(int ID) {
        if (TodasFamilias.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No exixten Familias");
        } else {
            int cont = 0;
            Double S1 = 0.0;
            Double S2 = 0.0;
            Double S3 = 0.0;
            Double S4 = 0.0;
            Persona aux = buscarPersona(ID);
            while (cont < aux.Egresos.size()) {
                if ("Semana 1".equals(aux.Egresos.get(cont).getSemana())) {
                    S1 = S1 + aux.Egresos.get(cont).getMonto();
                }
                if ("Semana 2".equals(aux.Egresos.get(cont).getSemana())) {
                    S2 = S2 + aux.Egresos.get(cont).getMonto();
                }
                if ("Semana 3".equals(aux.Egresos.get(cont).getSemana())) {
                    S3 = S3 + aux.Egresos.get(cont).getMonto();
                }
                if ("Semana 4".equals(aux.Egresos.get(cont).getSemana())) {
                    S4 = S4 + aux.Egresos.get(cont).getMonto();
                }
                cont = cont + 1;
            }
            Double[] MaxSemana = new Double[]{S1, S2, S3, S4};
            Double mayor = MaxSemana[0];
            for (int x = 1; x < MaxSemana.length; x++) {
                if (MaxSemana[x] > mayor) {
                    mayor = MaxSemana[x];
                }
            }
            System.out.println("\n\n\n                   CONSULTA 9                            ");
            System.out.println(" ___________________________________________________ ");
            if (Objects.equals(mayor, S1)) {
                System.out.println("| La semana 1 presenta mas gastos");
            }
            if (Objects.equals(mayor, S2)) {
                System.out.println("| La semana 2 presenta mas gastos");
            }
            if (Objects.equals(mayor, S3)) {
                System.out.println("| La semana 3 presenta mas gastos");
            }
            if (Objects.equals(mayor, S4)) {
                System.out.println("| La semana 4 presenta mas gastos");
            }
            System.out.println(" ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
        }
    }

    /**
     * Method to show in which, week TodasFamilias X records the most Ingresos
     *
     * @param Apellido
     */
    public void consulta10(String Apellido) {
        if (TodasFamilias.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No exixten Familias");
        } else {
            int cont = 0;
            Double S1 = 0.0;
            Double S2 = 0.0;
            Double S3 = 0.0;
            Double S4 = 0.0;
            Familia aux = buscarFamilia(Apellido);
            while (cont < aux.Personas.size()) {
                int cont2 = 0;
                while (cont2 < aux.Personas.get(cont).Ingresos.size()) {
                    if ("Semana 1".equals(aux.Personas.get(cont).Ingresos.get(cont2).getSemana())) {
                        S1 = S1 + aux.Personas.get(cont).Ingresos.get(cont2).getMonto();
                    }
                    if ("Semana 2".equals(aux.Personas.get(cont).Ingresos.get(cont2).getSemana())) {
                        S2 = S2 + aux.Personas.get(cont).Ingresos.get(cont2).getMonto();
                    }
                    if ("Semana 3".equals(aux.Personas.get(cont).Ingresos.get(cont2).getSemana())) {
                        S3 = S3 + aux.Personas.get(cont).Ingresos.get(cont2).getMonto();
                    }
                    if ("Semana 4".equals(aux.Personas.get(cont).Ingresos.get(cont2).getSemana())) {
                        S4 = S4 + aux.Personas.get(cont).Ingresos.get(cont2).getMonto();
                    }
                    cont2 = cont2 + 1;
                }
                cont = cont + 1;
            }
            Double[] MaxSemana = new Double[]{S1, S2, S3, S4};
            Double mayor = MaxSemana[0];
            for (int x = 1; x < MaxSemana.length; x++) {
                if (MaxSemana[x] > mayor) {
                    mayor = MaxSemana[x];
                }
            }
            System.out.println("\n\n\n                   CONSULTA 10                           ");
            System.out.println(" ___________________________________________________ ");
            if (Objects.equals(mayor, S1)) {
                System.out.println("| La semana 1 presenta mas ingresos");
            }
            if (Objects.equals(mayor, S2)) {
                System.out.println("| La semana 2 presenta mas ingresos");
            }
            if (Objects.equals(mayor, S3)) {
                System.out.println("| La semana 3 presenta mas ingresos");
            }
            if (Objects.equals(mayor, S4)) {
                System.out.println("| La semana 4 presenta mas ingresos");
            }
            System.out.println(" ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ");
        }
    }

    /**
     * Method to hide the PanelUbicacion at the beginning of the program
     */
    public final void inicio() {
        PanelUbicacion.setVisible(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboXClasiEgre;
    private javax.swing.JComboBox<String> ComboXGenero;
    private javax.swing.JComboBox<String> ComboXGrado;
    private javax.swing.JPanel IngresosYEgresos;
    private javax.swing.JTabbedPane MainPanel;
    private javax.swing.JPanel PanelUbicacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
